{
  "logger": [
    "analyze_historical_data_quality.py",
    "api/server.py",
    "benchmark_retrodiction.py",
    "causal_model/counterfactual_engine.py",
    "causal_model/counterfactual_simulator.py",
    "causal_model/discovery.py",
    "causal_model/optimized_discovery.py",
    "causal_model/vectorized_operations.py",
    "chatmode/conversational_core.py",
    "chatmode/integrations/pulse_module_adapters.py",
    "chatmode/launch_conversational_ui.py",
    "chatmode/llm_integration/domain_adapter.py",
    "chatmode/llm_integration/llm_model.py",
    "chatmode/rag/context_provider.py",
    "chatmode/test_openai_integration.py",
    "chatmode/vector_store/build_vector_store.py",
    "chatmode/vector_store/codebase_parser.py",
    "chatmode/vector_store/codebase_vector_store.py",
    "cli/gui_launcher.py",
    "cli/interactive_shell.py",
    "cli/main.py",
    "core/training_review_store.py",
    "core/trust_update_buffer.py",
    "data/manual_ingestion.py",
    "dev_tools/diagnostics/find_duplicate_symbols.py",
    "dev_tools/pulse_argument_checker.py",
    "dev_tools/pulse_autoscan_on_add.py",
    "dev_tools/pulse_cli_dashboard.py",
    "dev_tools/pulse_cli_docgen.py",
    "dev_tools/pulse_code_validator.py",
    "dev_tools/pulse_dir_cleaner.py",
    "dev_tools/pulse_encoding_checker.py",
    "dev_tools/pulse_forecast_test_suite.py",
    "dev_tools/pulse_scan_hooks.py",
    "dev_tools/pulse_shell_autohook.py",
    "dev_tools/pulse_test_suite.py",
    "dev_tools/rule_audit_viewer.py",
    "dev_tools/rule_dev_shell.py",
    "dev_tools/symbolic_drift_plot.py",
    "dev_tools/triage/build_triage_report.py",
    "diagnostics/gravity_explainer.py",
    "diagnostics/shadow_model_monitor.py",
    "examples/context7_integration_example.py",
    "examples/historical_timeline_example.py",
    "forecast_engine/ai_forecaster.py",
    "forecast_engine/ensemble_manager.py",
    "forecast_engine/forecast_batch_runner.py",
    "forecast_engine/forecast_drift_monitor.py",
    "forecast_engine/forecast_ensemble.py",
    "forecast_engine/forecast_exporter.py",
    "forecast_engine/forecast_log_viewer.py",
    "forecast_engine/forecast_memory.py",
    "forecast_engine/forecast_regret_engine.py",
    "forecast_engine/forecast_tracker.py",
    "forecast_output/cluster_memory_compressor.py",
    "forecast_output/digest_exporter.py",
    "forecast_output/digest_logger.py",
    "forecast_output/digest_trace_hooks.py",
    "forecast_output/dual_narrative_compressor.py",
    "forecast_output/forecast_age_tracker.py",
    "forecast_output/forecast_cluster_classifier.py",
    "forecast_output/forecast_compressor.py",
    "forecast_output/forecast_fidelity_certifier.py",
    "forecast_output/forecast_generator.py",
    "forecast_output/forecast_licenser.py",
    "forecast_output/forecast_prioritization_engine.py",
    "forecast_output/forecast_summary_synthesizer.py",
    "forecast_output/pfpa_logger.py",
    "forecast_output/pulse_converge.py",
    "forecast_output/pulse_forecast_lineage.py",
    "forecast_output/strategos_digest_builder.py",
    "improve_historical_data.py",
    "iris/ingest_api.py",
    "iris/ingest_db.py",
    "iris/ingest_fs.py",
    "iris/ingest_kafka.py",
    "iris/ingest_s3.py",
    "iris/ingest_thirdparty.py",
    "iris/iris_archive.py",
    "iris/iris_plugins.py",
    "iris/iris_plugins_finance.py",
    "iris/iris_plugins_variable_ingestion/alpha_vantage_plugin.py",
    "iris/iris_plugins_variable_ingestion/census_plugin.py",
    "iris/iris_plugins_variable_ingestion/coinmarketcap_plugin.py",
    "iris/iris_plugins_variable_ingestion/financial_news_plugin.py",
    "iris/iris_plugins_variable_ingestion/gdelt_plugin.py",
    "iris/iris_plugins_variable_ingestion/github_plugin.py",
    "iris/iris_plugins_variable_ingestion/google_trends_plugin.py",
    "iris/iris_plugins_variable_ingestion/hackernews_plugin.py",
    "iris/iris_plugins_variable_ingestion/healthmap_plugin.py",
    "iris/iris_plugins_variable_ingestion/high_frequency_indicator_plugin.py",
    "iris/iris_plugins_variable_ingestion/historical_ingestion_plugin.py",
    "iris/iris_plugins_variable_ingestion/manual_opec_plugin.py",
    "iris/iris_plugins_variable_ingestion/nasa_power_plugin.py",
    "iris/iris_plugins_variable_ingestion/nasdaq_plugin.py",
    "iris/iris_plugins_variable_ingestion/newsapi_plugin.py",
    "iris/iris_plugins_variable_ingestion/open_meteo_plugin.py",
    "iris/iris_plugins_variable_ingestion/openaq_plugin.py",
    "iris/iris_plugins_variable_ingestion/openfda_plugin.py",
    "iris/iris_plugins_variable_ingestion/reddit_plugin.py",
    "iris/iris_plugins_variable_ingestion/who_gho_plugin.py",
    "iris/iris_plugins_variable_ingestion/wikidata_plugin.py",
    "iris/iris_plugins_variable_ingestion/world_bank_plugin.py",
    "iris/iris_plugins_variable_ingestion/worldbank_plugin.py",
    "iris/iris_scraper.py",
    "iris/iris_symbolism.py",
    "iris/iris_utils/cli_historical_data.py",
    "iris/iris_utils/historical_data_repair.py",
    "iris/iris_utils/historical_data_retriever.py",
    "iris/iris_utils/historical_data_transformer.py",
    "iris/iris_utils/historical_data_verification.py",
    "iris/iris_utils/ingestion_persistence.py",
    "iris/iris_utils/test_historical_data_pipeline.py",
    "iris/iris_utils/world_bank_integration.py",
    "iris/signal_gating.py",
    "iris/test_plugins.py",
    "iris/variable_recommender.py",
    "learning/diagnose_pulse.py",
    "learning/plia_stub.py",
    "learning/trust_audit.py",
    "memory/cluster_mutation_tracker.py",
    "memory/forecast_memory.py",
    "memory/forecast_memory_promoter.py",
    "memory/pulse_memory_guardian.py",
    "memory/pulsegrow.py",
    "memory/trace_audit_engine.py",
    "memory/variable_cluster_engine.py",
    "operator_interface/pulse_prompt_logger.py",
    "pulse_desktop/ui_shell.py",
    "recursive_training/aws_batch_submit.py",
    "recursive_training/aws_batch_submit_status.py",
    "recursive_training/metrics/async_metrics_collector.py",
    "recursive_training/parallel_trainer.py",
    "recursive_training/regime_sensor/event_stream_manager.py",
    "recursive_training/regime_sensor/integration.py",
    "recursive_training/regime_sensor/regime_detector.py",
    "recursive_training/regime_sensor/retrodiction_trigger.py",
    "recursive_training/run_training.py",
    "runversionone.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/benchmarking/benchmark_retrodiction.py",
    "scripts/capture_missing_variables.py",
    "scripts/data_management/improve_historical_data.py",
    "scripts/discover_available_variables.py",
    "scripts/legacy/runversionone.py",
    "simulation_engine/causal_rules.py",
    "simulation_engine/rules/reverse_rule_engine.py",
    "simulation_engine/rules/rule_autoevolver.py",
    "simulation_engine/rules/rule_fingerprint_expander.py",
    "simulation_engine/utils/simulation_replayer.py",
    "simulation_engine/worldstate.py",
    "simulation_engine/worldstate_monitor.py",
    "symbolic_system/config.py",
    "symbolic_system/context.py",
    "symbolic_system/gravity/cli.py",
    "symbolic_system/gravity/gravity_config.py",
    "symbolic_system/gravity/gravity_fabric.py",
    "symbolic_system/gravity/integration.py",
    "symbolic_system/gravity/integration_example.py",
    "symbolic_system/gravity/overlay_bridge.py",
    "symbolic_system/gravity/symbolic_gravity_fabric.py",
    "symbolic_system/gravity/symbolic_pillars.py",
    "symbolic_system/gravity/visualization.py",
    "symbolic_system/numeric_transforms.py",
    "symbolic_system/optimization.py",
    "symbolic_system/pulse_symbolic_learning_loop.py",
    "symbolic_system/symbolic_executor.py",
    "symbolic_system/symbolic_memory.py",
    "symbolic_system/symbolic_state_tagger.py",
    "symbolic_system/symbolic_upgrade_planner.py",
    "trust_system/forecast_licensing_shell.py",
    "trust_system/fragility_detector.py",
    "trust_system/pulse_lineage_tracker.py",
    "trust_system/pulse_regret_chain.py",
    "trust_system/retrodiction_engine.py",
    "trust_system/services/trust_enrichment_service.py",
    "trust_system/trust_engine.py",
    "trust_system/trust_update.py",
    "utils/context7_client.py",
    "utils/performance_utils.py",
    "venv/Scripts/dumppdf.py"
  ],
  "HISTORICAL_TIMELINE_DIR": [
    "analyze_historical_data_quality.py",
    "improve_historical_data.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "VARIABLE_CATALOG_PATH": [
    "analyze_historical_data_quality.py",
    "improve_historical_data.py",
    "iris/iris_utils/historical_data_retriever.py",
    "iris/iris_utils/world_bank_integration.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "VERIFICATION_REPORT_PATH": [
    "analyze_historical_data_quality.py",
    "improve_historical_data.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "OUTPUT_DIR": [
    "analyze_historical_data_quality.py",
    "dev_tools/pulse_forecast_test_suite.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "MIN_YEARS": [
    "analyze_historical_data_quality.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "TARGET_YEARS": [
    "analyze_historical_data_quality.py",
    "improve_historical_data.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "PRIORITY_VARIABLES": [
    "analyze_historical_data_quality.py",
    "improve_historical_data.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "load_variable_catalog": [
    "analyze_historical_data_quality.py",
    "improve_historical_data.py",
    "iris/iris_utils/historical_data_retriever.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "load_verification_report": [
    "analyze_historical_data_quality.py",
    "improve_historical_data.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "get_latest_transformation": [
    "analyze_historical_data_quality.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "load_transformation_data": [
    "analyze_historical_data_quality.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "analyze_variable_data": [
    "analyze_historical_data_quality.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "analyze_temporal_alignment": [
    "analyze_historical_data_quality.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "generate_visualizations": [
    "analyze_historical_data_quality.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "generate_report": [
    "analyze_historical_data_quality.py",
    "scripts/analysis/analyze_historical_data_quality.py"
  ],
  "main": [
    "analyze_historical_data_quality.py",
    "api_key_report.py",
    "api_key_test.py",
    "api_key_test_updated.py",
    "chatmode/launch_conversational_ui.py",
    "chatmode/test_openai_integration.py",
    "chatmode/vector_store/build_vector_store.py",
    "cli/gui_launcher.py",
    "dev_tools/analysis/enhanced_phantom_scanner.py",
    "dev_tools/apply_symbolic_revisions.py",
    "dev_tools/apply_symbolic_upgrades.py",
    "dev_tools/compress_forecast_chain.py",
    "dev_tools/diagnostics/find_duplicate_symbols.py",
    "dev_tools/enforce_forecast_batch.py",
    "dev_tools/episode_memory_viewer.py",
    "dev_tools/epistemic_mirror_review.py",
    "dev_tools/generate_symbolic_upgrade_plan.py",
    "dev_tools/log_forecast_audits.py",
    "dev_tools/memory_recovery_viewer.py",
    "dev_tools/operator_brief_cli.py",
    "dev_tools/propose_epistemic_upgrades.py",
    "dev_tools/pulse_arc_cli.py",
    "dev_tools/pulse_batch_alignment_analyzer.py",
    "dev_tools/pulse_forecast_evaluator.py",
    "dev_tools/pulse_shell_autohook.py",
    "dev_tools/pulse_signal_router_v2_cli.py",
    "dev_tools/pulse_ui_plot.py",
    "dev_tools/pulse_ui_replay.py",
    "dev_tools/symbolic_flip_analyzer.py",
    "dev_tools/testing/api_key_test.py",
    "dev_tools/testing/api_key_test_updated.py",
    "dev_tools/triage/build_triage_report.py",
    "dev_tools/utils/git_cleanup.py",
    "enhanced_phantom_scanner.py",
    "examples/context7_integration_example.py",
    "examples/historical_timeline_example.py",
    "forecast_engine/forecast_regret_engine.py",
    "forecast_engine/forecast_tools.py",
    "forecast_output/forecast_pipeline_cli.py",
    "forecast_output/pulse_forecast_lineage.py",
    "git_cleanup.py",
    "improve_historical_data.py",
    "iris/iris_utils/cli_historical_data.py",
    "iris/iris_utils/historical_data_retriever.py",
    "iris/iris_utils/historical_data_transformer.py",
    "iris/iris_utils/world_bank_integration.py",
    "iris/test_plugins.py",
    "iris/variable_recommender.py",
    "learning/pulse_ui_audit_cycle.py",
    "learning/trace_forecast_episode.py",
    "operator_interface/learning_log_viewer.py",
    "pulse/config/__main__.py",
    "pulse_desktop/ui_operator.py",
    "pulse_desktop/ui_shell.py",
    "recursive_training/aws_batch_submit.py",
    "recursive_training/aws_batch_submit_status.py",
    "recursive_training/run_training.py",
    "scripts/analysis/analyze_historical_data_quality.py",
    "scripts/build_symbol_index.py",
    "scripts/capture_missing_variables.py",
    "scripts/data_management/improve_historical_data.py",
    "scripts/discover_available_variables.py",
    "scripts/reporting/api_key_report.py",
    "scripts/run_causal_benchmarks.py",
    "simulation_engine/utils/build_timeline.py",
    "simulation_engine/utils/ingest_to_snapshots.py",
    "simulation_engine/utils/pulse_variable_forecaster.py",
    "simulation_engine/utils/simulation_trace_viewer.py",
    "venv/Scripts/bottle.py",
    "venv/Scripts/dumppdf.py",
    "venv/Scripts/jp.py",
    "venv/Scripts/pdf2txt.py",
    "venv/Scripts/pywin32_postinstall.py",
    "venv/Scripts/pywin32_testall.py"
  ],
  "mask_key": [
    "api_key_report.py",
    "api_key_test.py",
    "api_key_test_updated.py",
    "dev_tools/testing/api_key_test.py",
    "dev_tools/testing/api_key_test_updated.py",
    "scripts/reporting/api_key_report.py"
  ],
  "check_environment_variable": [
    "api_key_report.py",
    "api_key_test.py",
    "api_key_test_updated.py",
    "dev_tools/testing/api_key_test.py",
    "dev_tools/testing/api_key_test_updated.py",
    "scripts/reporting/api_key_report.py"
  ],
  "test_fred_api": [
    "api_key_report.py",
    "api_key_test_updated.py",
    "dev_tools/testing/api_key_test_updated.py",
    "scripts/reporting/api_key_report.py"
  ],
  "test_finnhub_api": [
    "api_key_report.py",
    "api_key_test_updated.py",
    "dev_tools/testing/api_key_test_updated.py",
    "scripts/reporting/api_key_report.py"
  ],
  "test_nasdaq_api": [
    "api_key_report.py",
    "api_key_test_updated.py",
    "dev_tools/testing/api_key_test_updated.py",
    "scripts/reporting/api_key_report.py"
  ],
  "format_result": [
    "api_key_report.py",
    "api_key_test.py",
    "api_key_test_updated.py",
    "dev_tools/testing/api_key_test.py",
    "dev_tools/testing/api_key_test_updated.py",
    "scripts/reporting/api_key_report.py"
  ],
  "print_separator": [
    "api_key_test.py",
    "api_key_test_updated.py",
    "dev_tools/testing/api_key_test.py",
    "dev_tools/testing/api_key_test_updated.py"
  ],
  "RetrodictionBenchmark": [
    "benchmark_retrodiction.py",
    "scripts/benchmarking/benchmark_retrodiction.py"
  ],
  "run_benchmark": [
    "benchmark_retrodiction.py",
    "scripts/benchmarking/benchmark_retrodiction.py"
  ],
  "required_packages": [
    "check_benchmark_deps.py",
    "scripts/benchmarking/check_benchmark_deps.py"
  ],
  "optional_packages": [
    "check_benchmark_deps.py",
    "scripts/benchmarking/check_benchmark_deps.py"
  ],
  "missing_required": [
    "check_benchmark_deps.py",
    "scripts/benchmarking/check_benchmark_deps.py"
  ],
  "missing_optional": [
    "check_benchmark_deps.py",
    "scripts/benchmarking/check_benchmark_deps.py"
  ],
  "delete_pycache_dirs": [
    "delete pycache.py",
    "dev_tools/utils/delete_pycache.py"
  ],
  "EnhancedPhantomScanner": [
    "dev_tools/analysis/enhanced_phantom_scanner.py",
    "enhanced_phantom_scanner.py"
  ],
  "run_command": [
    "dev_tools/utils/git_cleanup.py",
    "examples/historical_timeline_example.py",
    "git_cleanup.py"
  ],
  "get_repo_size": [
    "dev_tools/utils/git_cleanup.py",
    "git_cleanup.py"
  ],
  "suggest_lfs_setup": [
    "dev_tools/utils/git_cleanup.py",
    "git_cleanup.py"
  ],
  "cleanup_instructions": [
    "dev_tools/utils/git_cleanup.py",
    "git_cleanup.py"
  ],
  "CustomJSONEncoder": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "modify_historical_ingestion_plugin": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "get_processed_data_path": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "load_processed_data": [
    "improve_historical_data.py",
    "iris/iris_utils/historical_data_verification.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "clean_and_impute_data": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "save_processed_data": [
    "improve_historical_data.py",
    "iris/iris_utils/ingestion_persistence.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "visualize_data": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "update_verification_report": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "execute_data_ingestion": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "process_priority_variables": [
    "improve_historical_data.py",
    "scripts/data_management/improve_historical_data.py"
  ],
  "log_experiment": [
    "examples/mlflow_tracking_example.py",
    "mlflow_tracking_example.py"
  ],
  "module_exists": [
    "dev_tools/utils/patch_imports.py",
    "patch_imports.py"
  ],
  "search_module": [
    "dev_tools/utils/patch_imports.py",
    "patch_imports.py"
  ],
  "patch_imports_in_file": [
    "dev_tools/utils/patch_imports.py",
    "patch_imports.py"
  ],
  "patch_all_imports": [
    "dev_tools/utils/patch_imports.py",
    "patch_imports.py"
  ],
  "FullPhantomScanner": [
    "dev_tools/analysis/phantom_function_scanner.py",
    "phantom_function_scanner.py"
  ],
  "HistoricalDataLoader": [
    "runversionone.py",
    "scripts/legacy/runversionone.py"
  ],
  "load_historical_data_for_baseline": [
    "runversionone.py",
    "scripts/legacy/runversionone.py"
  ],
  "list_available_historical_datasets": [
    "runversionone.py",
    "scripts/legacy/runversionone.py"
  ],
  "establish_baseline_accuracy": [
    "runversionone.py",
    "scripts/legacy/runversionone.py"
  ],
  "variable_registry": [
    "api/core_api.py",
    "trust_system/rule_adjustment.py"
  ],
  "feature_store": [
    "api/core_api.py",
    "core/feature_store.py"
  ],
  "app": [
    "api/core_api.py",
    "api/server.py",
    "iris/ingest_api.py",
    "pulse/logs/api.py",
    "venv/Scripts/bottle.py"
  ],
  "get_forecasts": [
    "api/core_api.py",
    "pulse/logs/api.py"
  ],
  "get_latest_forecasts": [
    "api/core_api.py",
    "api/server.py",
    "forecast_output/pfpa_logger.py"
  ],
  "run_retrodiction_simulation": [
    "api/core_api.py",
    "trust_system/retrodiction_engine.py"
  ],
  "get_retrodiction_status": [
    "api/core_api.py",
    "api/server.py"
  ],
  "get_autopilot_status": [
    "api/core_api.py",
    "api/server.py"
  ],
  "run_retrodiction": [
    "api/server.py",
    "simulation_engine/simulate_backward.py"
  ],
  "config": [
    "capital_engine/capital_layer.py",
    "myapp/alembic/env.py"
  ],
  "ensure_log_dir": [
    "cli/interactive_shell.py",
    "forecast_engine/forecast_drift_monitor.py",
    "forecast_output/forecast_confidence_gate.py",
    "forecast_output/forecast_contradiction_detector.py",
    "forecast_output/forecast_summary_synthesizer.py",
    "simulation_engine/utils/simulation_trace_logger.py",
    "symbolic_system/symbolic_memory.py",
    "symbolic_system/symbolic_state_tagger.py",
    "symbolic_system/symbolic_trace_scorer.py"
  ],
  "DEFAULT_FRAGILITY_THRESHOLD": [
    "config/gravity_config.py",
    "core/pulse_config.py"
  ],
  "scraper": [
    "core/celery_app.py",
    "iris/ingest_api.py"
  ],
  "BASE_DIR": [
    "core/path_registry.py",
    "dev_tools/generate_plugin_stubs.py"
  ],
  "DEFAULT_DECAY_RATE": [
    "core/pulse_config.py",
    "simulation_engine/simulate_backward.py"
  ],
  "get_config": [
    "core/pulse_config.py",
    "recursive_training/config/default_config.py",
    "recursive_training/integration/config_manager.py",
    "symbolic_system/gravity/gravity_config.py"
  ],
  "LOG_PATH": [
    "core/pulse_learning_log.py",
    "learning/diagnose_pulse.py",
    "memory/variable_performance_tracker.py",
    "operator_interface/learning_log_viewer.py"
  ],
  "get_default_variable_state": [
    "core/variable_registry.py",
    "simulation_engine/historical_retrodiction_runner.py"
  ],
  "load_jsonl": [
    "dev_tools/apply_symbolic_revisions.py",
    "dev_tools/certify_forecast_batch.py",
    "dev_tools/compress_forecast_chain.py",
    "dev_tools/enforce_forecast_batch.py",
    "dev_tools/log_forecast_audits.py",
    "dev_tools/propose_epistemic_upgrades.py",
    "dev_tools/pulse_arc_cli.py",
    "forecast_output/forecast_pipeline_cli.py",
    "learning/promote_memory_forecasts.py",
    "learning/trace_forecast_episode.py",
    "operator_interface/operator_brief_generator.py"
  ],
  "save_jsonl": [
    "dev_tools/certify_forecast_batch.py",
    "dev_tools/enforce_forecast_batch.py"
  ],
  "parser": [
    "dev_tools/certify_forecast_batch.py",
    "dev_tools/cli_retrodict_forecasts.py",
    "dev_tools/run_symbolic_learning.py",
    "dev_tools/run_symbolic_sweep.py",
    "dev_tools/visualize_symbolic_graph.py",
    "learning/promote_memory_forecasts.py"
  ],
  "args": [
    "dev_tools/certify_forecast_batch.py",
    "dev_tools/cli_retrodict_forecasts.py",
    "dev_tools/run_symbolic_learning.py",
    "dev_tools/run_symbolic_sweep.py",
    "dev_tools/visualize_symbolic_graph.py",
    "learning/promote_memory_forecasts.py"
  ],
  "forecasts": [
    "dev_tools/certify_forecast_batch.py",
    "dev_tools/cli_retrodict_forecasts.py",
    "dev_tools/visualize_symbolic_graph.py"
  ],
  "FOREIGN_ARCHIVE": [
    "dev_tools/epistemic_mirror_review.py",
    "dev_tools/propose_epistemic_upgrades.py"
  ],
  "DIVERGENCE_LOG": [
    "dev_tools/epistemic_mirror_review.py",
    "dev_tools/propose_epistemic_upgrades.py"
  ],
  "scan_for_hooks": [
    "dev_tools/hook_utils.py",
    "dev_tools/pulse_scan_hooks.py"
  ],
  "print_summary": [
    "dev_tools/module_dependency_map.py",
    "forecast_output/pulse_forecast_lineage.py"
  ],
  "parse_args": [
    "dev_tools/pulse_argument_checker.py",
    "dev_tools/pulse_autoscan_on_add.py",
    "dev_tools/pulse_code_validator.py",
    "dev_tools/pulse_dir_cleaner.py",
    "forecast_output/pulse_forecast_lineage.py",
    "recursive_training/aws_batch_submit.py",
    "recursive_training/aws_batch_submit_status.py",
    "recursive_training/run_training.py",
    "simulation_engine/utils/ingest_to_snapshots.py",
    "venv/Scripts/pdf2txt.py"
  ],
  "load_forecasts": [
    "dev_tools/pulse_batch_alignment_analyzer.py",
    "dev_tools/symbolic_flip_analyzer.py",
    "dev_tools/visualize_symbolic_graph.py"
  ],
  "plot_alignment_scores": [
    "dev_tools/pulse_batch_alignment_analyzer.py",
    "dev_tools/pulse_ui_plot.py"
  ],
  "ALL_CATEGORIES": [
    "dev_tools/pulse_cli_dashboard.py",
    "dev_tools/pulse_cli_docgen.py"
  ],
  "SEARCH_PATHS": [
    "dev_tools/pulse_encoding_checker.py",
    "dev_tools/pulse_scan_hooks.py",
    "dev_tools/pulse_shell_autohook.py"
  ],
  "load_trace": [
    "dev_tools/pulse_forecast_evaluator.py",
    "dev_tools/pulse_ui_replay.py",
    "memory/trace_audit_engine.py",
    "simulation_engine/simulation_drift_detector.py",
    "simulation_engine/utils/simulation_trace_viewer.py"
  ],
  "validate_forecast": [
    "dev_tools/pulse_forecast_test_suite.py",
    "forecast_engine/forecast_integrity_engine.py"
  ],
  "HOOKS_JSON": [
    "dev_tools/pulse_scan_hooks.py",
    "dev_tools/pulse_shell_autohook.py",
    "pulse_desktop/ui_shell.py"
  ],
  "replay_trace": [
    "dev_tools/pulse_ui_replay.py",
    "memory/trace_audit_engine.py"
  ],
  "profile": [
    "dev_tools/run_symbolic_learning.py",
    "utils/performance_utils.py"
  ],
  "train": [
    "forecast_engine/ai_forecaster.py",
    "simulation_engine/train_rl_agent.py"
  ],
  "run_batch_forecasts": [
    "forecast_engine/forecast_batch_runner.py",
    "simulation_engine/worldstate_monitor.py"
  ],
  "compress_mc_samples": [
    "forecast_engine/forecast_compressor.py",
    "forecast_output/forecast_compressor.py"
  ],
  "forecast_memory": [
    "forecast_engine/forecast_memory.py",
    "forecast_engine/forecast_tracker.py",
    "forecast_output/forecast_formatter.py",
    "trust_system/retrodiction_engine.py"
  ],
  "score_forecast": [
    "forecast_engine/forecast_scoring.py",
    "forecast_output/cluster_memory_compressor.py",
    "forecast_output/dual_narrative_compressor.py"
  ],
  "export_cluster_summary": [
    "forecast_output/forecast_cluster_classifier.py",
    "memory/rule_cluster_engine.py"
  ],
  "flag_drift_sensitive_forecasts": [
    "forecast_output/forecast_compressor.py",
    "operator_interface/strategos_digest.py",
    "trust_system/trust_engine.py"
  ],
  "compress_forecasts": [
    "forecast_output/forecast_compressor.py",
    "pulse_desktop/ui_shell.py"
  ],
  "CONTRADICTION_LOG_PATH": [
    "forecast_output/forecast_contradiction_detector.py",
    "forecast_output/forecast_contradiction_digest.py"
  ],
  "save_forecast": [
    "forecast_output/forecast_formatter.py",
    "trust_system/retrodiction_engine.py"
  ],
  "license_forecast": [
    "forecast_output/forecast_licenser.py",
    "trust_system/forecast_licensing_shell.py"
  ],
  "is_valid_tag": [
    "forecast_output/forecast_summary_synthesizer.py",
    "forecast_output/forecast_tags.py"
  ],
  "pfpa_memory": [
    "forecast_output/pfpa_logger.py",
    "trust_system/trust_update.py"
  ],
  "log_prompt": [
    "forecast_output/strategos_digest_builder.py",
    "operator_interface/pulse_prompt_logger.py"
  ],
  "POLL_INTERVAL": [
    "iris/ingest_db.py",
    "iris/ingest_s3.py",
    "iris/ingest_thirdparty.py"
  ],
  "ARCHIVE_DIR": [
    "iris/ingest_fs.py",
    "iris/iris_archive.py"
  ],
  "_FRED": [
    "iris/iris_plugins_variable_ingestion/historical_ingestion_plugin.py",
    "iris/iris_utils/historical_data_retriever.py",
    "iris/variable_ingestion.py"
  ],
  "AnomalyRemediationEngine": [
    "learning/engines/anomaly_remediation.py",
    "learning/learning.py"
  ],
  "FeatureDiscoveryEngine": [
    "learning/engines/feature_discovery.py",
    "learning/learning.py"
  ],
  "AuditReportingEngine": [
    "learning/engines/audit_reporting.py",
    "learning/learning.py"
  ],
  "CausalInferenceEngine": [
    "learning/engines/causal_inference.py",
    "learning/learning.py"
  ],
  "ContinuousLearningEngine": [
    "learning/engines/continuous_learning.py",
    "learning/learning.py"
  ],
  "ExternalIntegrationEngine": [
    "learning/engines/external_integration.py",
    "learning/learning.py"
  ],
  "ActiveExperimentationEngine": [
    "learning/engines/active_experimentation.py",
    "learning/learning.py"
  ],
  "OUTPUT_FILE": [
    "learning/retrodiction_bootstrap.py",
    "scripts/discover_available_variables.py"
  ],
  "FRED_API_KEY": [
    "iris/iris_plugins_variable_ingestion/fred_plugin.py",
    "learning/retrodiction_bootstrap.py"
  ],
  "BLOCKED_LOG_PATH": [
    "learning/symbolic_sweep_scheduler.py",
    "memory/memory_repair_queue.py"
  ],
  "RULE_MUTATION_LOG": [
    "memory/rule_cluster_engine.py",
    "simulation_engine/rule_mutation_engine.py"
  ],
  "_registry": [
    "memory/rule_cluster_engine.py",
    "simulation_engine/rule_mutation_engine.py",
    "simulation_engine/rules/pulse_rule_expander.py",
    "simulation_engine/rules/rule_autoevolver.py",
    "simulation_engine/rules/rule_matching_utils.py"
  ],
  "get_all_rules": [
    "memory/rule_cluster_engine.py",
    "simulation_engine/rule_mutation_engine.py"
  ],
  "LEARNING_LOG": [
    "operator_interface/mutation_digest_exporter.py",
    "operator_interface/mutation_log_viewer.py",
    "operator_interface/symbolic_contradiction_digest.py"
  ],
  "DIGEST_OUT": [
    "operator_interface/mutation_digest_exporter.py",
    "operator_interface/symbolic_contradiction_digest.py"
  ],
  "generate_operator_brief": [
    "operator_interface/operator_brief_generator.py",
    "pulse_desktop/ui_operator.py"
  ],
  "highlight_volatility": [
    "operator_interface/rule_cluster_digest_formatter.py",
    "operator_interface/variable_cluster_digest_formatter.py"
  ],
  "generate_revision_report": [
    "operator_interface/symbolic_revision_report.py",
    "symbolic_system/pulse_symbolic_revision_planner.py"
  ],
  "display_forecast_visualization": [
    "pulse_desktop/ui_operator.py",
    "pulse_desktop/ui_shell.py"
  ],
  "get_batch_client": [
    "recursive_training/aws_batch_submit.py",
    "recursive_training/aws_batch_submit_status.py"
  ],
  "get_job_status": [
    "recursive_training/aws_batch_submit.py",
    "recursive_training/aws_batch_submit_status.py"
  ],
  "monitor_job": [
    "recursive_training/aws_batch_submit.py",
    "recursive_training/aws_batch_submit_status.py"
  ],
  "RetrodictionLoader": [
    "simulation_engine/historical_retrodiction_runner.py",
    "simulation_engine/turn_engine.py"
  ],
  "simulate_forward": [
    "simulation_engine/simulator_core.py",
    "simulation_engine/utils/pulse_variable_forecaster.py"
  ],
  "REGRET_LOG": [
    "trust_system/forecast_memory_evolver.py",
    "trust_system/pulse_regret_chain.py"
  ],
  "FINGERPRINT_FILE": [
    "simulation_engine/rules/pulse_rule_expander.py",
    "trust_system/forecast_memory_evolver.py"
  ],
  "load_regrets": [
    "simulation_engine/rules/pulse_rule_expander.py",
    "trust_system/forecast_memory_evolver.py"
  ],
  "parse_date": [
    "iris/iris_utils/historical_data_transformer.py",
    "venv/Scripts/bottle.py"
  ],
  "install": [
    "venv/Scripts/bottle.py",
    "venv/Scripts/pywin32_postinstall.py"
  ],
  "uninstall": [
    "venv/Scripts/bottle.py",
    "venv/Scripts/pywin32_postinstall.py"
  ],
  "create_parser": [
    "venv/Scripts/dumppdf.py",
    "venv/Scripts/pdf2txt.py"
  ],
  "default_config": [
    "recursive_training/config/default_config.py",
    "symbolic_system/gravity/gravity_config.py"
  ],
  "SymbolicGravityFabric": [
    "symbolic_system/gravity/gravity_fabric.py",
    "symbolic_system/gravity/symbolic_gravity_fabric.py"
  ],
  "explain_forecast": [
    "chatmode/integrations/pulse_module_adapters.py",
    "simulation_engine/rules/pulse_rule_explainer.py"
  ],
  "_instance": [
    "recursive_training/data/feature_processor.py",
    "recursive_training/data/ingestion_manager.py"
  ],
  "_SOURCE_NAME": [
    "iris/iris_plugins_variable_ingestion/alpha_vantage_plugin.py",
    "iris/iris_plugins_variable_ingestion/coinmarketcap_plugin.py",
    "iris/iris_plugins_variable_ingestion/financial_news_plugin.py",
    "iris/iris_plugins_variable_ingestion/gdelt_plugin.py",
    "iris/iris_plugins_variable_ingestion/google_trends_plugin.py",
    "iris/iris_plugins_variable_ingestion/healthmap_plugin.py",
    "iris/iris_plugins_variable_ingestion/manual_opec_plugin.py",
    "iris/iris_plugins_variable_ingestion/nasa_power_plugin.py",
    "iris/iris_plugins_variable_ingestion/nasdaq_plugin.py",
    "iris/iris_plugins_variable_ingestion/openaq_plugin.py",
    "iris/iris_plugins_variable_ingestion/openfda_plugin.py",
    "iris/iris_plugins_variable_ingestion/wikidata_plugin.py",
    "iris/iris_plugins_variable_ingestion/world_bank_plugin.py"
  ],
  "BASE_URL": [
    "iris/iris_plugins_variable_ingestion/bls_plugin.py",
    "iris/iris_plugins_variable_ingestion/census_plugin.py",
    "iris/iris_plugins_variable_ingestion/fred_plugin.py"
  ],
  "FRED_KEY": [
    "iris/iris_plugins_variable_ingestion/historical_ingestion_plugin.py",
    "iris/iris_utils/historical_data_retriever.py"
  ],
  "_BASE_URL": [
    "iris/iris_plugins_variable_ingestion/nasa_power_plugin.py",
    "iris/iris_plugins_variable_ingestion/nasdaq_plugin.py",
    "iris/iris_plugins_variable_ingestion/openaq_plugin.py",
    "iris/iris_plugins_variable_ingestion/openfda_plugin.py"
  ],
  "_API_KEY": [
    "iris/iris_plugins_variable_ingestion/nasdaq_plugin.py",
    "iris/iris_plugins_variable_ingestion/openfda_plugin.py"
  ],
  "WorldBankPlugin": [
    "iris/iris_plugins_variable_ingestion/world_bank_plugin.py",
    "iris/iris_plugins_variable_ingestion/worldbank_plugin.py"
  ],
  "HISTORICAL_DATA_BASE_DIR": [
    "iris/iris_utils/historical_data_retriever.py",
    "iris/iris_utils/historical_data_transformer.py"
  ]
}