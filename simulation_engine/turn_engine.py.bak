"""
turn_engine.py

Controls the simulation loop at the turn level. Each turn includes:
- Symbolic and capital evolution via causal_rules.py
- Causal rule execution via rule_engine.py
- Logging of rule executions and symbolic overlays
- Snapshotting and turn increment

Author: Pulse v0.10
"""

from simulation_engine.worldstate import WorldState
from simulation_engine.state_mutation import decay_overlay
from simulation_engine.causal_rules import apply_causal_rules
from simulation_engine.rule_engine import run_rules
from typing import Callable, Optional


def run_turn(
    state: WorldState,
    rule_fn: Optional[Callable[[WorldState], None]] = None,
    decay_rate: float = 0.01,
    verbose: bool = True
) -> list[dict]:
    """
    Runs a full simulation turn. This includes:
    - Symbolic decay
    - Causal rule application (symbolic → symbolic, variable → capital)
    - Structured rule execution (rule engine)
    - Logging and turn increment

    Returns:
        rule_execution_log (list[dict]): Log of triggered rule IDs and tags
    """

    # Symbolic decay
    decay_overlay(state.overlays)
