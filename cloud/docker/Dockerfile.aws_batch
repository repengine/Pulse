# Dockerfile for Pulse Retrodiction Training - AWS Batch Optimized
# This version is specifically tailored for AWS Batch execution

FROM python:3.11-slim

LABEL maintainer="Pulse Team"
LABEL description="Container for Pulse Retrodiction Training System - AWS Batch optimized"
LABEL version="0.3.4"

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONFAULTHANDLER=1 \
    S3_DATA_BUCKET="pulse-retrodiction-data-poc" \
    S3_RESULTS_BUCKET="pulse-retrodiction-results-poc" \
    AWS_BATCH_MODE=true

# Create app directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy just the requirements file first for better caching
COPY cloud/docker/requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -U pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    # Install AWS CLI for S3 operations
    pip install --no-cache-dir awscli

# Set up directories
RUN mkdir -p /app/data/recursive_training && \
    mkdir -p /app/logs

# Copy only the necessary application code (more selective than the dev Dockerfile)
COPY recursive_training/ /app/recursive_training/
COPY core/ /app/core/
COPY simulation_engine/ /app/simulation_engine/
COPY causal_model/ /app/causal_model/
COPY cloud/docker/entrypoint.sh /app/entrypoint.sh

# Make the entrypoint script executable
RUN chmod +x /app/entrypoint.sh

# Create a non-root user to run the app
RUN groupadd -g 10001 pulseuser && \
    useradd -u 10001 -g pulseuser -s /bin/bash -m pulseuser && \
    chown -R pulseuser:pulseuser /app

# Switch to non-root user
USER pulseuser

# Define healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD python -c "import os, sys; sys.exit(0 if os.path.exists('/app/logs') else 1)"

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]

# Default command (can be overridden in AWS Batch job definition)
CMD ["python", "-m", "recursive_training.run_training"]